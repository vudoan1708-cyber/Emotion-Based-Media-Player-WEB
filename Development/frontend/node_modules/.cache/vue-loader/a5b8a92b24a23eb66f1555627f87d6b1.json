{"remainingRequest":"V:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based Media Player\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!V:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based Media Player\\client\\src\\components\\StarryBackground.vue?vue&type=style&index=0&id=e4e1ea52&scoped=true&lang=scss","dependencies":[{"path":"V:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based Media Player\\client\\src\\components\\StarryBackground.vue","mtime":1606960131580},{"path":"V:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based Media Player\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"V:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based Media Player\\client\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"V:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based Media Player\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"V:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based Media Player\\client\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"V:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based Media Player\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"V:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based Media Player\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJ0Avc2Fzcy9VbmlxdWUvX2JnJzsK"},{"version":3,"sources":["V:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based Media Player\\client\\src\\components\\StarryBackground.vue"],"names":[],"mappings":";AA4HA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"V:/DesignWork/PROGRAMMING/Tools-Specific-Projects/Javascript/Personal Projects/Web Apps/ON PROGRESS/Emotion-Based Media Player/client/src/components/StarryBackground.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"three_container\"></div>\n</template>\n\n<script>\nimport { Scene } from 'three/src/scenes/Scene';\nimport { WebGLRenderer } from 'three/src/renderers/WebGLRenderer';\nimport { PerspectiveCamera } from 'three/src/cameras/PerspectiveCamera';\nimport { Geometry } from 'three/src/core/Geometry';\n// import { DirectionalLight } from 'three/src/lights/DirectionalLight';\n// import { AmbientLight } from 'three/src/lights/AmbientLight';\n// // import { PlaneBufferGeometry } from 'three/src/geometries/PlaneBufferGeometry';\n// // import { MeshPhongMaterial } from 'three/src/materials/MeshPhongMaterial';\n// // import { MeshBasicMaterial } from 'three/src/materials/MeshBasicMaterial';\n// // import { Mesh } from 'three/src/objects/Mesh';\n\n// // import { TextureLoader } from 'three/src/loaders/TextureLoader';\n// // import { BackSide } from 'three/src/constants';\n\n// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n// import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\n// import { Vector2 } from 'three/src/math/Vector2';\n\nimport { onMounted } from 'vue';\n\n// Utilities\nimport loadResource from '@/components/Utils/loadResource';\n\nexport default {\n  name: 'StarryBackground',\n  setup() {\n    /* eslint-disable no-console */\n    /* eslint-disable padded-blocks */\n    /* eslint-disable no-trailing-spaces */\n    /* eslint-disable no-multiple-empty-lines */\n    /* eslint-disable semi */\n    /* eslint-disable indent */\n    /* eslint-disable no-unused-vars */\n    /* eslint-disable max-len */\n    /* eslint-disable no-param-reassign */\n\n    // three.js\n    const scene = new Scene();\n    const camera = new PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);\n    const starGeo = new Geometry();\n    let renderer;\n\n    // const colour = new Color(-1, 0, 1);\n\n    // rendering loop\n    function animate() {\n      renderer.render(scene, camera);\n        starGeo.vertices.forEach((p) => {\n            p.velocity += p.acceleration\n            p.y -= p.velocity;\n            \n            if (p.y < -200) {\n              p.y = 200;\n              p.velocity = 0;\n            }\n          });\n        starGeo.verticesNeedUpdate = true; \n      requestAnimationFrame(animate);\n    }\n\n    function init() {\n\n      // DOM elements\n      const container = document.getElementById('three_container');\n      const canvas = document.createElement('canvas');\n      container.appendChild(canvas);\n\n      // setup renderer\n      renderer = new WebGLRenderer({ canvas, antialias: true, alpha: true });\n      renderer.setClearColor('#000000', 1);\n\n      renderer.setPixelRatio(window.devicePixelRatio);\n\n      // set size of the renderer to be full screen\n      renderer.setSize(window.innerWidth, window.innerHeight);\n\n      camera.position.z = 1;\n      camera.rotation.x = Math.PI / 2;\n\n      // setup renderer\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n\n      loadResource('./assets/star.png', starGeo, renderer, scene, camera);\n    // makeStars();\n      // animate();\n    }\n\n    // function makeStars() {\n    //   const sprite = new THREE.TextureLoader().load('./assets/star.png');\n    //   const starGeo = new THREE.Geometry();\n    //   const starMaterial = new THREE.PointsMaterial({\n    //     color: 0xaaaaaa,\n    //     size: 0.7,\n    //     map: sprite,\n    //   });\n\n    //   for (let i = 0; i < numStars; i++) {\n    //     const star = new THREE.Vector3(\n    //       Math.random() * 700 - 300,\n    //       Math.random() * 700 - 300,\n    //       Math.random() * 700 - 300,\n    //     );\n    //     starGeo.vertices.push(star);\n    //   }\n    //   const stars = new THREE.Points(starGeo, starMaterial);\n    //   scene.add(stars);\n    //   renderer.render(scene, camera);\n    // }\n\n    onMounted(() => {\n      init();\n    });\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/sass/Unique/_bg';\n</style>\n"]}]}