{"remainingRequest":"E:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based-Music-Streaming-App-WEB\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based-Music-Streaming-App-WEB\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based-Music-Streaming-App-WEB\\frontend\\src\\handlers\\spotify.js","dependencies":[{"path":"E:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based-Music-Streaming-App-WEB\\frontend\\src\\handlers\\spotify.js","mtime":1609613567177},{"path":"E:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based-Music-Streaming-App-WEB\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based-Music-Streaming-App-WEB\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\DesignWork\\PROGRAMMING\\Tools-Specific-Projects\\Javascript\\Personal Projects\\Web Apps\\ON PROGRESS\\Emotion-Based-Music-Streaming-App-WEB\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/DesignWork/PROGRAMMING/Tools-Specific-Projects/Javascript/Personal Projects/Web Apps/ON PROGRESS/Emotion-Based-Music-Streaming-App-WEB/frontend/src/handlers/spotify.js"],"names":["hashURL","sleep","createSongDots","spotifyPlayerID","playlist","window","onSpotifyPlayerAPIReady","TOKEN","player","Spotify","Player","name","getOAuthToken","cb","on","e","console","error","state","log","data","device_id","connect","getSongsData","fetch","request","json","response","removeATempPlaylist","updatePlaylist","id","how","i","length","splice","push","makeATempPlaylist","valence","arousal","starDots","width","height","chosenPoints","p5","handlingSongsData","Number","playSong","LoginHandlers","PRODUCTION","process","env","NODE_ENV","ENDPOINT","location","href","audio_features","song_data","bounds","showBoundaries","song_i","Math","floor","song_j","song_x","song_y","x1","x2","y1","y2","access_token"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-lonely-if */\n/* eslint-disable no-await-in-loop */\n/* eslint-disable indent */\n/* eslint-disable max-len */\n/* eslint-disable operator-linebreak */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable camelcase */\n/* eslint-disable padded-blocks */\n/* eslint-disable no-console */\n\n// logic\nimport hashURL from '@/components/Utils/logic/hashURL';\nimport sleep from '@/components/Utils/logic/sleep';\n\nimport { createSongDots } from '@/components/Utils/p5/songVisualisation';\n\n// Spotify\nlet spotifyPlayerID = null;\nlet playlist = [];\n\n// Set up the Web Playback SDK PLAYER\nwindow.onSpotifyPlayerAPIReady = () => {\n  const TOKEN = hashURL();\n\n  // eslint-disable-next-line no-undef\n  const player = new Spotify.Player({\n    name: 'IAE',\n    getOAuthToken: (cb) => { cb(TOKEN); },\n  });\n\n  // Error handling\n  player.on('initialization_error', (e) => console.error(e));\n  player.on('authentication_error', (e) => console.error(e));\n  player.on('account_error', (e) => console.error(e));\n  player.on('playback_error', (e) => console.error(e));\n\n  // Playback status updates\n  player.on('player_state_changed', (state) => {\n    console.log(state);\n    // $('#current-track').attr('src', state.track_window.current_track.album.images[0].url);\n    // $('#current-track-name').text(state.track_window.current_track.name);\n  });\n\n  // Player Ready\n  player.on('ready', (data) => {\n    console.log('Ready with Device ID', data.device_id);\n    \n    // make the player id globally accessible\n    spotifyPlayerID = data.device_id;\n  });\n\n  // Connect to the player!\n  player.connect();\n};\n\nasync function getSongsData() {\n  const TOKEN = hashURL();\n\n  try {\n\n    // Node.js\n    const request = await fetch(`http://localhost:5000/spotify/?token=${TOKEN}`);\n\n    // Python\n    // const request = await fetch(`http://localhost:5000/spotify/${TOKEN}/${valence}/${arousal}`);\n\n    const response = await request.json();\n    // console.log(response);\n    return response;\n\n  } catch (err) {\n    console.log(err);\n    return err;\n  }\n}\n\nexport function removeATempPlaylist() {\n  // empty the playlist and refill it\n  playlist = [];\n}\n\nexport function updatePlaylist(id, how) {\n\n  // splice it off the playlist array\n  if (how === 'remove') {\n    for (let i = playlist.length - 1; i >= 0; i -= 1) {\n      if (playlist[i] === id) playlist.splice(id, 1);\n    }\n  } else playlist.push(id);\n}\n\nexport async function makeATempPlaylist(id, valence, arousal, starDots, width, height, chosenPoints, p5) {\n  \n  if (playlist.length === 0) {\n\n    // append the song's ids to the array\n    playlist.push(id);\n\n    // accepted songs\n    createSongDots('accepted', valence, arousal, id, \n                    starDots, width, height, p5);\n  } else {\n    for (let i = 0; i < playlist.length; i += 1) {\n  \n      // check for duplicates\n      if (id === playlist[i]) {\n        \n        await sleep(250);\n  \n        // redo the workflow\n        handlingSongsData(valence, arousal, starDots, chosenPoints, width, height, p5);\n  \n        break;\n      } else {\n          \n        // check the duplicates till the last element of the array\n        if (i === playlist.length - 1) {\n                \n          // append the song's ids to the array\n          playlist.push(id);\n  \n          // preview_urls.push(preview_url);\n  \n          // titles.push(title);\n  \n          // valences.push(song_valence);\n  \n          // arousals.push(song_energy);\n  \n          console.log(`Counter ${Number(playlist.length)}`);\n  \n          // await sleep(250);\n  \n          // accepted songs\n          createSongDots('accepted', valence, arousal, id, \n                          starDots, width, height, p5);\n  \n          break;\n        }\n      }\n    }\n  }\n}\n\n// Play a track using our new device ID\nasync function playSong(TOKEN) {\n\n  try {\n\n    // Node.js\n    const request = await fetch(`http://localhost:5000/play/?token=${TOKEN}&playlist=${playlist}&player_id=${spotifyPlayerID}`);\n\n    const response = await request.json();\n    console.log(response);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// GLOBALLY ACCESSIBLE FUNCTIONS\nexport async function LoginHandlers() {\n  // handling production and development mode\n  const PRODUCTION = process.env.NODE_ENV;\n\n  // if it's production mode, get rid of the proxied server,\n  // because, the client will be built on top of Python then,\n  // and it is served by Python as static files\n  // otherwise, run these two sides separately,\n  // with the endpoint /api as a proxy to the server\n  const ENDPOINT = (PRODUCTION === 'production') ? '' : '/api';\n  try {\n    window.location.href = `${ENDPOINT}/login`;\n  } catch (e) {\n    window.location.href = '/';\n    console.log(e);\n  }\n}\n\nexport async function handlingSongsData(valence, arousal, starDots, chosenPoints, width, height, p5) {\n\n  // get songs' valence and arousal data \n  const audio_features = await getSongsData();\n\n  // console.log(audio_features);\n  for (let i = 0; i < audio_features.length; i += 1) {\n\n    const song_data = audio_features[i];\n\n    // if playlist array hasn't reached its end\n    if (playlist.length < 5) {\n\n      // if i hasn't reached the end of the audio featiures array's loop\n      if (i < audio_features.length - 1) {\n\n        const bounds = starDots[chosenPoints[0]][chosenPoints[1]].showBoundaries();\n        // console.log(`Bounds: ${bounds.x1}, ${bounds.x2}, ${bounds.y1}, ${bounds.y2}`);\n\n        // map song's affective values to coordinates on the map\n        const song_i = Math.floor(song_data.valence * starDots.length);\n        const song_j = Math.floor((1 - song_data.arousal) * starDots[song_i].length);\n\n        const song_x = width / 5 + song_i * 15.4;\n        const song_y = height / 5 + song_j * 15.4;\n        // console.log(`Song's Coordinates: ${song_x}, ${song_y}`);\n\n        // compare\n        if (song_x > bounds.x1 && \n            song_x < bounds.x2\n        && song_y > bounds.y1 && \n            song_y < bounds.y2) {\n\n            // make a temporary playlist for the mood\n            await makeATempPlaylist(song_data.id, song_data.valence, song_data.arousal, starDots, width, height, chosenPoints, p5);\n        } else {\n\n          // unaccepted songs\n          createSongDots('unaccepted', song_data.valence, song_data.arousal, song_data.id, \n                          starDots, width, height, p5);\n        }\n\n      // otherwise, redo the loop again until the playlist array condition is satisfied\n      } else {\n        await sleep(500);\n        // console.log(playlist.length)\n        handlingSongsData(valence, arousal, starDots, chosenPoints, width, height, p5);\n      }\n    } else {\n      console.log(`End The Loop With ${playlist.length} songs`);\n      playSong(song_data.access_token, playlist);\n      break;\n    }\n  }\n}\n"]}]}